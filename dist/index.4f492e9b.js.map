{"mappings":"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","sources":["src/assets/js/main.js"],"sourcesContent":["// send email\n//keys\nconst serviceId = 'service_7w757kr'\nconst templateId = 'template_v5aow3t'\nconst userId = 'E6haNCxwwlI-tMYbc'\n\n// function which listen when user want send a email\nconst formElement = document.querySelector('#form-email')\nif(formElement) {\n    document.querySelector('#form-email').addEventListener(\"submit\", e => {\n        e.preventDefault();\n        const nameElement = document.querySelector('#name')\n        const surnameElement = document.querySelector('#surname')\n        const emailElement = document.querySelector('#email')\n        const messageElement = document.querySelector('#message')\n\n        let params = {\n            name: nameElement.value,\n            surname: surnameElement.value,\n            email: emailElement.value,\n            message: messageElement.value,\n        }\n        \n        // send email\n        emailjs.send(serviceId, templateId, params, userId)\n            .then(response => {\n                console.log(response.status)\n                console.log(response.text)\n                nameElement.value = ''\n                surnameElement.value = ''\n                emailElement.value = ''\n                messageElement.value = ''\n            })\n            .catch( error => {\n                console.log(error)\n            })\n        })\n}\n\n\n// sidenav\n\n// all elements\nconst sidenav = document.querySelector('#sidenav')\nconst header = document.querySelector('header')\nconst portfolioSection = document.querySelector('#portfolio')\nconst aboutSection = document.querySelector('#about')\nconst skillsSection = document.querySelector('#skills')\nconst contactSection = document.querySelector('#contact')\nconst navbar = document.querySelector('#navbar')\n\nif(sidenav) {\n    const options = {\n        rootMargin: '-200px 0px'\n    }\n\n    // observer\n    const observer = new IntersectionObserver(function callback(entries, observer) {\n        entries.forEach(entry => {\n            console.log(entry)\n            if(entry.isIntersecting) {\n                switch(entry.target.classList.value) {\n                    case 'portfolio':\n                        sidenav.setAttribute('data-visual', 'true')\n                        sidenav.children[0].setAttribute('data-visual', 'true')\n                        sidenav.children[1].setAttribute('data-visual', 'false')\n                        sidenav.children[2].setAttribute('data-visual', 'false')\n                        sidenav.children[3].setAttribute('data-visual', 'false')\n                    break;\n                    case 'about':\n                        sidenav.setAttribute('data-visual', 'true')\n                        sidenav.children[0].setAttribute('data-visual', 'false')\n                        sidenav.children[1].setAttribute('data-visual', 'true')\n                        sidenav.children[2].setAttribute('data-visual', 'false')\n                        sidenav.children[3].setAttribute('data-visual', 'false')\n                    break;\n                    case 'skills':\n                        sidenav.setAttribute('data-visual', 'true')\n                        sidenav.children[0].setAttribute('data-visual', 'false')\n                        sidenav.children[1].setAttribute('data-visual', 'false')\n                        sidenav.children[2].setAttribute('data-visual', 'true')\n                        sidenav.children[3].setAttribute('data-visual', 'false')\n                    break;\n                    case 'contact':\n                        sidenav.setAttribute('data-visual', 'true')\n                        sidenav.children[0].setAttribute('data-visual', 'false')\n                        sidenav.children[1].setAttribute('data-visual', 'false')\n                        sidenav.children[2].setAttribute('data-visual', 'false')\n                        sidenav.children[3].setAttribute('data-visual', 'true')\n                    break;\n                    case 'header':\n                        sidenav.setAttribute('data-visual', 'false')\n                        navbar.setAttribute('data-background', 'transparent')\n                        sidenav.children[0].setAttribute('data-visual', 'false')\n                        sidenav.children[1].setAttribute('data-visual', 'false')\n                        sidenav.children[2].setAttribute('data-visual', 'false')\n                        sidenav.children[3].setAttribute('data-visual', 'false')\n                    break;\n                }\n            } else {\n                if(entry.target.classList.value === 'header') {\n                    navbar.setAttribute('data-background', 'neutral')\n                }\n            }\n        });\n    }, options)\n\n\n    observer.observe(portfolioSection)\n    observer.observe(aboutSection)\n    observer.observe(skillsSection)\n    observer.observe(contactSection)\n    observer.observe(header)\n}\n"],"names":[],"version":3,"file":"index.4f492e9b.js.map","sourceRoot":"/__parcel_source_root/"}